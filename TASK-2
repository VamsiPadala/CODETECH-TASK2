import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.datasets import load_iris
from sklearn.preprocessing import StandardScaler
from sklearn.cluster import KMeans, AgglomerativeClustering, DBSCAN
from sklearn.metrics import silhouette_score, davies_bouldin_score
import scipy.cluster.hierarchy as shc

iris = load_iris()
data = pd.DataFrame(data=iris['data'], columns=iris['feature_names'])
scaler = StandardScaler()
data_scaled = scaler.fit_transform(data)

kmeans = KMeans(n_clusters=3, random_state=42)
kmeans_labels = kmeans.fit_predict(data_scaled)

hierarchical = AgglomerativeClustering(n_clusters=3)
hierarchical_labels = hierarchical.fit_predict(data_scaled)

dbscan = DBSCAN(eps=0.5, min_samples=5)
dbscan_labels = dbscan.fit_predict(data_scaled)

dbscan_labels_noise_free = dbscan_labels[dbscan_labels != -1]
data_scaled_noise_free = data_scaled[dbscan_labels != -1]

silhouette_scores = {
    "K-means": silhouette_score(data_scaled, kmeans_labels),
    "Hierarchical": silhouette_score(data_scaled, hierarchical_labels),
    "DBSCAN": silhouette_score(data_scaled_noise_free, dbscan_labels_noise_free)
}

davies_bouldin_scores = {
    "K-means": davies_bouldin_score(data_scaled, kmeans_labels),
    "Hierarchical": davies_bouldin_score(data_scaled, hierarchical_labels),
    "DBSCAN": davies_bouldin_score(data_scaled_noise_free, dbscan_labels_noise_free)
}

print("Silhouette Scores:", silhouette_scores)
print("Daviesâ€“Bouldin Scores:", davies_bouldin_scores)

plt.figure(figsize=(15, 5))
plt.subplot(1, 3, 1)
plt.scatter(data_scaled[:, 0], data_scaled[:, 1], c=kmeans_labels, cmap='viridis', marker='o', edgecolor='k')
plt.title('K-means Clustering')

plt.subplot(1, 3, 2)
plt.scatter(data_scaled[:, 0], data_scaled[:, 1], c=hierarchical_labels, cmap='viridis', marker='o', edgecolor='k')
plt.title('Hierarchical Clustering')

plt.subplot(1, 3, 3)
plt.scatter(data_scaled[:, 0], data_scaled[:, 1], c=dbscan_labels, cmap='viridis', marker='o', edgecolor='k')
plt.title('DBSCAN Clustering')

plt.suptitle('Clustering Analysis on Iris Dataset')
plt.tight_layout()
plt.show()
